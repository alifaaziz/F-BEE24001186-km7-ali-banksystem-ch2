// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  name     String
  email    String     @unique
  password String
  bankAccounts BankAccount[]
  profile Profile?

  @@map("users")
}

model BankAccount {
  id                Int           @id @default(autoincrement())
  user              User          @relation(fields: [userId], references: [id])
  userId            Int
  bankName          String
  bankAccountNumber String        @unique
  balance           Float         @default(0)
  transactionsFrom  Transaction[] @relation("sourceAccount")
  transactionsTo    Transaction[] @relation("destinationAccount")
  
  @@map("bankaccounts")
}

model Transaction {
  id                  Int          @id @default(autoincrement())
  sourceAccount       BankAccount  @relation("sourceAccount", fields: [sourceAccountId], references: [id])
  sourceAccountId     Int
  destinationAccount  BankAccount  @relation("destinationAccount", fields: [destinationAccountId], references: [id])
  destinationAccountId Int
  amount              Float

  @@map("transactions")
}

model Profile {
  id            Int    @id @default(autoincrement())
  user          User   @relation(fields: [userId], references: [id])
  userId        Int    @unique
  identityType  String
  identityNumber String
  address       String

  @@map("profiles")
}